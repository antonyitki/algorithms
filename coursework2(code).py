# -*- coding: utf-8 -*-
"""coursework2(code).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13mhS8TBMzU6Kv5MpyzoFKdZ8WXaYn0lV
"""

################################################################################
#                                                                              #
# University of Roehampton, London (UK)                                        #
# YIT 19488399, Antonio Ramon Oliver                                           #
# Module: Algorithms                                                           #
# Coursework part 2 (20% value). Weeks 4 -6. Date: Monday, 15 November 2021.   #
#                                                                              #
#                                                                              # 
#        HASH TABLE, MAP, HASHING FUNCTION, STORING, COLLISSIONS...            #
#                                                                              #
#              https://github.com/antonyitki/algorithms                        #
#                                                                              #
################################################################################


import pandas as pd
file = pd.read_csv("/uk_glx_open_retail_points_v20_202104.csv")
def hashF(key):
    P = 1024
    hashVal = 0
    for i in key:
        hashVal = int((127 * hashVal + ord(i)) % P)
    return hashVal
for i in file.retailer:
       if file.postcode[0] != file.postcode[1]:
        print(i,hashF(i))


hashed_key = []
value_in_ht = []
for index, row in file.iterrows():
    hashed_key.append(hashF(row.retailer))
    value_in_ht.append(row.postcode)
    print(row.retailer, ", ", row.postcode, " ===>>> ", row.store_name, ", ", 
          row.town, row.postcode, ", ",row.size_band, ", ", row.add_one)


hashTableRetailer = dict(zip(hashed_key, value_in_ht))
print(hashTableRetailer)
#searchValue = "Spar"
searchValue_name = input("Name of the Store, please:")
searchValueHashed = hashF(searchValue_name)
searchValue_postcode = input("Postcode of the Store, please:")
if searchValue_postcode == searchValueHashed:
    print (searchValueHashed)
print(row.retailer, ", ", row.postcode, " ===>>> ", row.store_name, ", ", 
          row.town, row.postcode, ", ",row.size_band, ", ", row.add_one)
print(hashTableRetailer.get(searchValueHashed))